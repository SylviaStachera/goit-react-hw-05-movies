{"version":3,"file":"static/js/186.7ead490c.chunk.js","mappings":"8LAmCA,UA/BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAWM,EAAKC,QACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,8BACE,wBACGF,EAAQa,OAAS,EAChBb,EAAQc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,KAED,wEAKT,C,+LChCKG,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASd,MAFS,2CAAH,qDAKXe,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACmBK,EADnB,+CADG,cACpBF,EADoB,yBAInBA,EAASd,MAJU,2CAAH,sDAOZiB,EAAe,mCAAG,WAAMtB,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,oBACOgB,EADP,oBADM,cACvBG,EADuB,yBAItBA,EAASd,MAJa,2CAAH,sDAOfkB,EAAe,mCAAG,WAAMvB,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACegB,EADf,oBADM,cACvBG,EADuB,yBAItBA,EAASd,MAJa,2CAAH,sDAOfF,EAAe,mCAAG,WAAMH,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACegB,EADf,2BADM,cACvBG,EADuB,yBAItBA,EAASd,MAJa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </ul>\n    </section>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst apiKey = '5b510caffd74cc663774c058405dd762';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${apiKey}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","data","results","catch","error","console","log","length","map","id","author","content","apiKey","axios","getTrending","response","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}