{"version":3,"file":"static/js/729.3d905df1.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/services/api.js","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const apiKey = \"5b510caffd74cc663774c058405dd762\";\nconst baseUrl = \"https://api.themoviedb.org/3/\";\n\nexport const getTrending = async () => {\n\tconst url = `${baseUrl}trending/movie/day?api_key=${apiKey}`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error(\"An error occurred while fetching trending movies.\");\n\t}\n};\nexport const searchMovies = async (query) => {\n\tconst url = `${baseUrl}search/movie?api_key=${apiKey}&query=${query}&include_adult=false&language=en-US&page=1`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error(\"An error occurred while searching for movies.\");\n\t}\n};\n\nexport const getMovieDetails = async (movieId) => {\n\tconst url = `${baseUrl}movie/${movieId}?api_key=${apiKey}&language=en-US`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error(\"An error occurred while fetching movies details.\");\n\t}\n};\n\nexport const getMovieCredits = async (movieId) => {\n\tconst url = `${baseUrl}movie/${movieId}/credits?api_key=${apiKey}&language=en-US`;\n\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error(\"An error occurred while fetching movies credits.\");\n\t}\n};\n\nexport const getMovieReviews = async (movieId) => {\n\tconst url = `${baseUrl}movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error(\"An error occurred while fetching movies reviews.\");\n\t}\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\"};","import { useState } from \"react\";\n\nimport css from \"./SearchBar.module.css\";\n\nconst SearchBar = ({ onInputValue }) => {\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\n\tconst handleChange = (evt) => {\n\t\tconst newSearchQuery = evt.currentTarget.value.toLowerCase();\n\t\tsetSearchQuery(newSearchQuery);\n\t\tonInputValue(newSearchQuery);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetSearchQuery(\"\");\n\t};\n\n\treturn (\n\t\t<form className={css.form} onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\tclassName={css.input}\n\t\t\t\ttype=\"text\"\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tautoFocus\n\t\t\t\tplaceholder=\"Search movies...\"\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<button type=\"submit\">Search</button>\n\t\t</form>\n\t);\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovies } from '../../components/services/api';\nimport { Link } from 'react-router-dom';\nimport SearchBar from '../../components/SearchBar/SearchBar';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n\n      searchMovies(query)\n        .then(data => {\n          setMovieList(data.results);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsLoading(false);\n        });\n    } else {\n      setMovieList([]);\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  const handleInputValue = searchQuery => {\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <div>\n      <SearchBar onInputValue={handleInputValue} />\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {movieList.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","apiKey","baseUrl","getTrending","url","fetch","response","json","data","Error","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","onInputValue","useState","searchQuery","setSearchQuery","className","css","onSubmit","evt","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","newSearchQuery","currentTarget","toLowerCase","location","useLocation","useSearchParams","searchParams","setSearchParams","get","movieList","setMovieList","isLoading","setIsLoading","useEffect","results","catch","console","log","map","movie","to","id","state","from","title"],"sourceRoot":""}