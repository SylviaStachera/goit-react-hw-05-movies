{"version":3,"file":"static/js/76.2c0f2cac.chunk.js","mappings":"yNACA,EAAsB,kBAAtB,EAAoD,wB,SCgDpD,EA3Ca,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAASM,EAAKC,KACf,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,8BACE,wBACGF,EAAMa,OACLb,EAAMc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,2BACE,gBACEC,UAAWC,EACXC,IACEL,EAAY,yCAC0BA,GAD1B,8DAIdM,IAAKL,EACLM,QAAQ,UAGV,wBAAKN,KACL,eAAGE,UAAWC,EAAd,wBAAyCF,OAblCH,EAgBZ,KAED,wEAKT,C,+LC7CDS,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,uBADE,cACnBG,EADmB,yBAElBA,EAASpB,MAFS,2CAAH,qDAKXqB,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,8BACEK,EADF,+CADG,cACpBF,EADoB,yBAInBA,EAASpB,MAJU,2CAAH,sDAOZuB,EAAe,mCAAG,WAAM5B,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,oBADM,cACvByB,EADuB,yBAEtBA,EAASpB,MAFa,2CAAH,sDAKfF,EAAe,mCAAG,WAAMH,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,4BADM,cACvByB,EADuB,yBAEtBA,EAASpB,MAFa,2CAAH,sDAKfwB,EAAe,mCAAG,WAAM7B,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,gBACZtB,EADY,mCADM,cACvByB,EADuB,yBAItBA,EAASpB,MAJa,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"character\":\"Cast_character__tKDlA\",\"noImg\":\"Cast_noImg__BLDz3\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../services/api';\n\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(data => {\n        setCasts(data.cast);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <section>\n      <ol>\n        {casts.length ? (\n          casts.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  className={css.img}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                      : `https://www.rsjlawang.com/assets/images/dokter/no_image.jpg`\n                  }\n                  alt={name}\n                  loading=\"lazy\"\n                />\n\n                <h4>{name}</h4>\n                <p className={css.character}>Character: {character}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>Sorry, there is no information about cast</p>\n        )}\n      </ol>\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: '5b510caffd74cc663774c058405dd762',\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-US`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["useState","casts","setCasts","movieId","useParams","useEffect","getMovieCredits","then","data","cast","catch","error","console","log","length","map","id","profile_path","name","character","className","css","src","alt","loading","axios","api_key","getTrending","response","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}