{"version":3,"file":"static/js/729.ada2cc28.chunk.js","mappings":"mOACA,GAAgB,KAAO,yB,SCiCvB,EA9BkB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,aACpB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAaA,OACC,kBAAMC,UAAWC,EAAAA,KAAUC,SANP,SAACC,GACrBA,EAAIC,iBACJL,EAAe,GACf,EAGA,WACC,kBACCC,UAAWC,EAAAA,MACXI,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,MAAOX,EACPY,SApBkB,SAACP,GACrB,IAAMQ,EAAiBR,EAAIS,cAAcH,MAAMI,cAC/Cd,EAAeY,GACff,EAAae,EACb,KAkBC,mBAAQN,KAAK,SAAb,sBAGF,ECyBD,EAnDe,WACb,IAAMS,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAAY,GAC3C,GAAkCvB,EAAAA,EAAAA,UAAS,IAA3C,eAAOwB,EAAP,KAAkBC,EAAlB,KACA,GAAkCzB,EAAAA,EAAAA,WAAS,GAA3C,eAAO0B,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACJN,GACFK,GAAa,IAEbE,EAAAA,EAAAA,IAAaP,GACVQ,MAAK,SAAAC,GACJN,EAAaM,EAAKC,SAClBL,GAAa,EACd,IACAM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZP,GAAa,EACd,MAEHF,EAAa,IACbE,GAAa,GAEhB,GAAE,CAACL,IAMJ,OACE,4BACE,SAAC,EAAD,CAAWvB,aANU,SAAAE,GACvBoB,EAAgB,CAAEC,MAAOrB,GAC1B,IAMIyB,GACC,uCAEA,wBACGF,EAAUa,KAAI,SAAAC,GAAK,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMzB,GAAhD,SACGqB,EAAMK,SAFFL,EAAME,GADG,QAW7B,C,+LCrDDI,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,uBADE,cACnBG,EADmB,yBAElBA,EAAShB,MAFS,2CAAH,qDAKXF,EAAY,mCAAG,WAAMP,GAAN,uFACHsB,EAAAA,EAAAA,IAAA,8BACEtB,EADF,+CADG,cACpByB,EADoB,yBAInBA,EAAShB,MAJU,2CAAH,sDAOZiB,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBADM,cACvBF,EADuB,yBAEtBA,EAAShB,MAFa,2CAAH,sDAKfmB,EAAe,mCAAG,WAAMD,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BADM,cACvBF,EADuB,yBAEtBA,EAAShB,MAFa,2CAAH,sDAKfoB,EAAe,mCAAG,WAAMF,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,mCADM,cACvBF,EADuB,yBAItBA,EAAShB,MAJa,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\"};","import { useState } from \"react\";\n\nimport css from \"./SearchBar.module.css\";\n\nconst SearchBar = ({ onInputValue }) => {\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\n\tconst handleChange = (evt) => {\n\t\tconst newSearchQuery = evt.currentTarget.value.toLowerCase();\n\t\tsetSearchQuery(newSearchQuery);\n\t\tonInputValue(newSearchQuery);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetSearchQuery(\"\");\n\t};\n\n\treturn (\n\t\t<form className={css.form} onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\tclassName={css.input}\n\t\t\t\ttype=\"text\"\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tautoFocus\n\t\t\t\tplaceholder=\"Search movies...\"\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<button type=\"submit\">Search</button>\n\t\t</form>\n\t);\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovies } from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport SearchBar from '../../components/SearchBar/SearchBar';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n\n      searchMovies(query)\n        .then(data => {\n          setMovieList(data.results);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsLoading(false);\n        });\n    } else {\n      setMovieList([]);\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  const handleInputValue = searchQuery => {\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <div>\n      <SearchBar onInputValue={handleInputValue} />\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {movieList.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: '5b510caffd74cc663774c058405dd762',\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-US`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["onInputValue","useState","searchQuery","setSearchQuery","className","css","onSubmit","evt","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","newSearchQuery","currentTarget","toLowerCase","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","movieList","setMovieList","isLoading","setIsLoading","useEffect","searchMovies","then","data","results","catch","error","console","log","map","movie","to","id","state","from","title","axios","api_key","getTrending","response","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}