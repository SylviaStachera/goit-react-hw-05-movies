{"version":3,"file":"static/js/888.9b461d91.chunk.js","mappings":"mOACA,GAAgB,IAAM,0BAA0B,UAAY,gCAAgC,IAAM,0BAA0B,cAAc,kCAAkC,eAAe,mCAAmC,KAAO,2BAA2B,cAAgB,qC,SCwFhR,EAhFqB,WAAO,IAAD,IACzB,GAA8BA,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAeC,OAAOH,GACtBI,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GACJV,EAAWU,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,IAEJ,IAAQY,EACNhB,EADMgB,YAAaC,EACnBjB,EADmBiB,MAAOC,EAC1BlB,EAD0BkB,aAAcC,EACxCnB,EADwCmB,aAAcC,EACtDpB,EADsDoB,SAAUC,EAChErB,EADgEqB,OAI5DC,GAD2B,GAAfH,GACaI,QAAQ,GAEjCC,EAAON,EAAeA,EAAaO,UAAU,EAAG,GAAK,GAE3D,OACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,mBAAQD,UAAWC,EAAAA,IAAnB,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,YAAiBC,GAAE,oBAAEtB,EAASuB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA9D,+BAKF,iBAAKJ,UAAWC,EAAAA,IAAhB,WACE,gBACED,UAAWC,EAAAA,eACXI,IACEf,EAAW,yCACyBA,IAElC,6CAGJgB,IAAKZ,EACLa,QAAQ,UAEV,iBAAKP,UAAWC,EAAAA,gBAAhB,WACE,0BACGV,EADH,MACiBO,EADjB,KAC6B,QAE7B,yCAAiBF,EAAjB,SACA,4BACE,sCACA,uBAAIF,QAEN,4BACE,oCACA,eAAIM,UAAWC,EAAAA,KAAf,SACGN,GACCA,EAAOa,QACPb,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,gBAKrB,iBAAKV,UAAWC,EAAAA,cAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAU,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,+LCrFKC,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAAShC,MAFS,2CAAH,qDAKXiC,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACmBK,EADnB,+CADG,cACpBF,EADoB,yBAInBA,EAAShC,MAJU,2CAAH,sDAOZF,EAAe,mCAAG,WAAMP,GAAN,uFACNuC,EAAAA,EAAAA,IAAA,gBACZvC,EADY,oBACOsC,EADP,oBADM,cACvBG,EADuB,yBAItBA,EAAShC,MAJa,2CAAH,sDAOfmC,EAAe,mCAAG,WAAM5C,GAAN,uFACNuC,EAAAA,EAAAA,IAAA,gBACZvC,EADY,4BACesC,EADf,oBADM,cACvBG,EADuB,yBAItBA,EAAShC,MAJa,2CAAH,sDAOfoC,EAAe,mCAAG,WAAM7C,GAAN,uFACNuC,EAAAA,EAAAA,IAAA,gBACZvC,EADY,4BACesC,EADf,2BADM,cACvBG,EADuB,yBAItBA,EAAShC,MAJa,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetails_btn__tCU2l\",\"container\":\"MovieDetails_container__o8VqJ\",\"box\":\"MovieDetails_box__3lVdP\",\"img-details\":\"MovieDetails_img-details__f44C4\",\"info-details\":\"MovieDetails_info-details__Y1au2\",\"list\":\"MovieDetails_list__y5Rs9\",\"additioanInfo\":\"MovieDetails_additioanInfo__ArTl0\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/api';\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const { movieId } = useParams();\n  const cleanMovieId = Number(movieId);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(cleanMovieId)\n      .then(data => {\n        setDetails(data);\n      })\n      .catch(error => console.log(error));\n  }, [cleanMovieId]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    details;\n\n  const userScore = vote_average * 10;\n  const userScoreFix = userScore.toFixed(0);\n\n  const year = release_date ? release_date.substring(0, 4) : '';\n\n  return (\n    <div className={css.container}>\n      <button className={css.btn}>\n        <Link className={css['btn-link']} to={location.state?.from ?? '/'}>\n          &#8592; Go back\n        </Link>\n      </button>\n\n      <div className={css['box']}>\n        <img\n          className={css['img-details']}\n          src={\n            poster_path ? (\n              `https://image.tmdb.org/t/p/w300${poster_path}`\n            ) : (\n              <p>No poster, sorry!</p>\n            )\n          }\n          alt={overview}\n          loading=\"lazy\"\n        />\n        <div className={css['info-details']}>\n          <h2>\n            {title} &#40; {year} &#41;{' '}\n          </h2>\n          <p>User scrode: {userScoreFix} %</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <ul className={css.list}>\n              {genres &&\n                genres.length &&\n                genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className={css.additioanInfo}>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst apiKey = '5b510caffd74cc663774c058405dd762';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${apiKey}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["useState","details","setDetails","movieId","useParams","cleanMovieId","Number","location","useLocation","useEffect","getMovieDetails","then","data","catch","error","console","log","poster_path","title","release_date","vote_average","overview","genres","userScoreFix","toFixed","year","substring","className","css","to","state","from","src","alt","loading","length","map","id","name","Suspense","fallback","apiKey","axios","getTrending","response","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}